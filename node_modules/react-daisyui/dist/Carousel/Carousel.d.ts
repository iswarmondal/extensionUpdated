import React, { ReactElement } from 'react';
import { IComponentBaseProps } from '../types';
import { CarouselItemProps, CarouselItemWidth } from './CarouselItem';
export declare type CarouselProps = React.HTMLAttributes<HTMLDivElement> & IComponentBaseProps & {
    children: ReactElement<CarouselItemProps>[];
    display?: 'slider' | 'numbered' | 'sequential';
    snap?: 'start' | 'center' | 'end';
    vertical?: boolean;
    width?: CarouselItemWidth;
    buttonStyle?: (value: string) => React.ReactElement;
};
declare const _default: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDivElement> & IComponentBaseProps & {
    children: React.ReactElement<CarouselItemProps, string | React.JSXElementConstructor<any>>[];
    display?: "slider" | "numbered" | "sequential" | undefined;
    snap?: "start" | "center" | "end" | undefined;
    vertical?: boolean | undefined;
    width?: CarouselItemWidth | undefined;
    buttonStyle?: ((value: string) => React.ReactElement<any, string | React.JSXElementConstructor<any>>) | undefined;
} & React.RefAttributes<HTMLDivElement>> & {
    Item: ({ children, innerRef, src, alt, index, width, hasButtons, buttonStyle, onPrev, onNext, className, ...props }: CarouselItemProps) => JSX.Element;
};
export default _default;
